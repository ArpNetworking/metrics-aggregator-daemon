<?xml version="1.0"?>
<!--
  ~ Copyright 2016 Groupon.com
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <parent>
    <groupId>com.arpnetworking.build</groupId>
    <artifactId>arpnetworking-parent-pom</artifactId>
    <version>2.0.10</version>
    <relativePath />
  </parent>

  <modelVersion>4.0.0</modelVersion>
  <groupId>com.arpnetworking.metrics</groupId>
  <artifactId>metrics-aggregator-daemon</artifactId>
  <packaging>jar</packaging>
  <name>Metrics Aggregator Daemon</name>
  <description>Aggregates samples published by metrics client libraries and writes to destinations.</description>
  <version>1.19.3-SNAPSHOT</version>

  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
      <comments>A business-friendly OSS license</comments>
    </license>
  </licenses>

  <developers>
    <developer>
      <id>barp</id>
      <name>Brandon Arp</name>
      <email>brandon.arp@inscopemetrics.io</email>
      <organization>Inscope Metrics</organization>
      <organizationUrl>http://www.inscopemetrics.io</organizationUrl>
      <roles>
        <role>developer</role>
      </roles>
    </developer>
    <developer>
      <id>vkoskela</id>
      <name>Ville Koskela</name>
      <email>ville.koskela@inscopemetrics.io</email>
      <organization>Inscope Metrics</organization>
      <organizationUrl>http://www.inscopemetrics.io</organizationUrl>
      <roles>
        <role>developer</role>
      </roles>
    </developer>
  </developers>

  <scm>
    <connection>scm:git:git@github.com:ArpNetworking/metrics-aggregator-daemon.git</connection>
    <developerConnection>scm:git:git@github.com:ArpNetworking/metrics-aggregator-daemon.git</developerConnection>
    <url>https://github.com/arpnetworking/metrics-aggregator-daemon</url>
    <tag>HEAD</tag>
  </scm>

  <properties>
    <!--Dependency versions-->
    <akka.version>2.5.32</akka.version>
    <akka.http.version>10.1.5</akka.http.version>
    <apache.httpclient.version>4.5.6</apache.httpclient.version>
    <apache.httpcore.version>4.4.10</apache.httpcore.version>
    <arpnetworking.commons.version>1.19.0</arpnetworking.commons.version>
    <aspectjrt.version>1.9.2</aspectjrt.version>
    <asynchttpclient.version>2.6.0</asynchttpclient.version>
    <cglib.version>3.3.0</cglib.version>
    <client.protocol.version>0.12.0</client.protocol.version>
    <fastutil.version>8.2.2</fastutil.version>
    <guava.version>25.1-jre</guava.version>
    <guice.version>4.2.2</guice.version>
    <jackson.version>2.9.8</jackson.version>
    <javassist.version>3.24.1-GA</javassist.version>
    <javassist.maven.core.version>0.2.2</javassist.maven.core.version>
    <jsr305.version>3.0.2</jsr305.version>
    <logback.version>1.2.3</logback.version>
    <logback.steno.version>1.18.2</logback.steno.version>
    <log4j.over.slf4j.version>1.7.25</log4j.over.slf4j.version>
    <metrics.aggregator.protocol.prometheus.version>1.0.0</metrics.aggregator.protocol.prometheus.version>
    <metrics.aggregator.protocol.version>1.0.10</metrics.aggregator.protocol.version>
    <metrics.client.version>0.11.3</metrics.client.version>
    <metrics.client.http.version>0.11.2</metrics.client.http.version>
    <metrics.client.incubator.version>0.11.2</metrics.client.incubator.version>
    <metrics.jvm.extra.version>0.11.2</metrics.jvm.extra.version>
    <oval.version>1.90</oval.version>
    <protobuf.version>3.8.0</protobuf.version>
    <scala.version>2.11</scala.version>
    <scala.java8.compat.version>0.7.0</scala.java8.compat.version>
    <scala.library.version>2.11.12</scala.library.version>
    <slf4j.version>1.7.25</slf4j.version>
    <snappy.version>1.1.7.2</snappy.version>
    <spotbugs.annotations.version>3.1.12</spotbugs.annotations.version>
    <typesafe.config.version>1.3.3</typesafe.config.version>
    <vertx.core.version>2.1.6</vertx.core.version>

    <!--Test dependency versions-->
    <commons.math3.version>3.6.1</commons.math3.version>
    <hamcrest.version>2.1</hamcrest.version>
    <junit.benchmarks.version>0.7.2</junit.benchmarks.version>
    <junit.version>4.12</junit.version>
    <metrics.generator.version>1.3.0</metrics.generator.version>
    <mockito.version>2.23.4</mockito.version>
    <performance.test.version>1.2.1</performance.test.version>
    <statsd.client.timgroup>3.1.0</statsd.client.timgroup>
    <wiremock.version>2.20.0</wiremock.version>

    <!-- Additional Plugins -->
    <aspectjtools.maven.plugin>1.9.2</aspectjtools.maven.plugin>
    <aspectj.maven.plugin.version>1.8</aspectj.maven.plugin.version>
    <build.helper.plugin.version>3.0.0</build.helper.plugin.version>
    <docker.maven.plugin.version>0.27.2</docker.maven.plugin.version>
    <javassist.maven.plugin.version>0.2.2</javassist.maven.plugin.version>
    <maven.assembly.plugin.version>2.6</maven.assembly.plugin.version>
    <maven.properties.plugin.version>1.0.0</maven.properties.plugin.version>
    <rpm.maven.plugin.version>2.1.5</rpm.maven.plugin.version>

    <!-- Code Coverage -->
    <jacoco.check.line.coverage>0.50</jacoco.check.line.coverage>
    <jacoco.check.branch.coverage>0.49</jacoco.check.branch.coverage>

    <!-- JVM Debug -->
    <debugJavaOptions />
    <debugJavaPort>9001</debugJavaPort>

    <!-- Docker Overrides -->
    <skipDockerBuild>false</skipDockerBuild>

    <!-- Assembly Overrides -->
    <tgz.finalName>${project.build.finalName}</tgz.finalName>

    <!-- Project Overrides -->
    <buildDirectory>${project.basedir}/target</buildDirectory>

    <!-- Additional Checkstyle Suppression -->
    <checkstyleExtraSuppressions>${project.basedir}/checkstyle-extra-suppressions.xml</checkstyleExtraSuppressions>
  </properties>

  <build>
    <directory>${buildDirectory}</directory>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
    <plugins>
      <!-- Enable Inherited Plugins -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <configuration>
          <systemPropertyVariables>
            <dockerHostAddress>${docker.host.address}</dockerHostAddress>
          </systemPropertyVariables>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>buildnumber-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>com.rimerosolutions.maven.plugins</groupId>
        <artifactId>wrapper-maven-plugin</artifactId>
        <inherited>false</inherited>
      </plugin>
      <!-- Project Specific Plugins -->
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <version>${maven.clean.plugin.version}</version>
        <executions>
          <execution>
            <id>clean-assemblies</id>
            <phase>initialize</phase>
            <goals>
              <goal>clean</goal>
            </goals>
            <configuration>
             <excludeDefaultDirectories>true</excludeDefaultDirectories>
             <verbose>true</verbose>
             <filesets>
                <fileset>
                  <directory>${project.build.directory}/docker-assembly</directory>
                  <directory>${project.build.directory}/appassembler</directory>
                </fileset>
              </filesets>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>appassembler-maven-plugin</artifactId>
        <configuration>
          <programs>
            <program>
              <id>mad</id>
              <mainClass>com.arpnetworking.metrics.mad.Main</mainClass>
            </program>
          </programs>
          <unixScriptTemplate>${project.build.directory}/appAssemblerUnixBinTemplate</unixScriptTemplate>
          <endorsedDir>lib/ext</endorsedDir>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>${maven.assembly.plugin.version}</version>
        <executions>
          <execution>
            <id>docker-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <appendAssemblyId>false</appendAssemblyId>
              <finalName>docker-assembly</finalName>
              <attach>false</attach>
              <tarLongFileMode>posix</tarLongFileMode>
              <descriptors>
                <descripto>src/main/assembly/docker.xml</descripto>
              </descriptors>
            </configuration>
          </execution>
          <execution>
            <id>app-tgz</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <finalName>${tgz.finalName}</finalName>
              <appendAssemblyId>true</appendAssemblyId>
              <attach>false</attach>
              <tarLongFileMode>posix</tarLongFileMode>
              <descriptors>
                <descriptor>src/main/assembly/bin.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.arpnetworking.commons</groupId>
        <artifactId>javassist-maven-plugin</artifactId>
        <version>${javassist.maven.plugin.version}</version>
        <executions>
          <execution>
            <id>javassist-process</id>
            <goals>
              <goal>process</goal>
            </goals>
            <configuration>
              <processor>com.arpnetworking.commons.builder.ValidationProcessor</processor>
            </configuration>
          </execution>
          <execution>
            <id>javassist-test-process</id>
            <goals>
              <goal>test-process</goal>
            </goals>
            <configuration>
              <processor>com.arpnetworking.commons.builder.ValidationProcessor</processor>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>aspectj-maven-plugin</artifactId>
        <version>${aspectj.maven.plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
              <goal>test-compile</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
          <complianceLevel>1.8</complianceLevel>
          <aspectLibraries>
            <aspectLibrary>
              <groupId>com.arpnetworking.logback</groupId>
              <artifactId>logback-steno</artifactId>
            </aspectLibrary>
          </aspectLibraries>
          <showWeaveInfo>true</showWeaveInfo>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjtools</artifactId>
            <version>${aspectjtools.maven.plugin}</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>${build.helper.plugin.version}</version>
        <executions>
          <execution>
            <id>get-local-ip</id>
            <phase>initialize</phase>
            <goals>
              <goal>local-ip</goal>
            </goals>
            <configuration>
              <localIpProperty>kafka.advertised.address</localIpProperty>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>${docker.maven.plugin.version}</version>
        <extensions>true</extensions>
        <executions>
          <execution>
            <id>default-build</id>
            <phase>package</phase>
            <goals>
              <goal>build</goal>
            </goals>
          </execution>
          <execution>
            <id>default-start</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
            <configuration>
              <skip>${skipIntegrationTests}</skip>
            </configuration>
          </execution>
          <execution>
            <id>default-stop</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
            <configuration>
              <skip>${skipIntegrationTests}</skip>
            </configuration>
          </execution>
          <execution>
            <id>default-push</id>
            <phase>deploy</phase>
            <goals>
              <goal>push</goal>
            </goals>
            <configuration>
              <filter>arpnetworking/mad:${project.version}</filter>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <autoCreateCustomNetworks>true</autoCreateCustomNetworks>
          <showLogs>true</showLogs>
          <images>
            <image>
              <name>arpnetworking/mad/kafka:${project.version}</name>
              <alias>kafka</alias>
              <build>
                <dockerFile>${project.basedir}/src/main/docker/kafka/Dockerfile</dockerFile>
                <tags>
                  <tag>${buildNumber}</tag>
                </tags>
              </build>
              <run>
                <network>
                  <mode>custom</mode>
                  <name>mad-net</name>
                  <alias>kafka</alias>
                </network>
                <ports>
                  <port>+kafka.ip:2181:2181</port>
                  <port>+kafka.ip:9092:9092</port>
                </ports>
                <env>
                  <ADVERTISED_HOST>${kafka.advertised.address}</ADVERTISED_HOST>
                  <ADVERTISED_PORT>9092</ADVERTISED_PORT>
                  <AUTO_CREATE_TOPICS>true</AUTO_CREATE_TOPICS>
                </env>
              </run>
            </image>
            <image>
              <name>arpnetworking/mad:${project.version}</name>
              <alias>mad</alias>
              <build>
                <dockerFile>${project.build.directory}/docker-assembly/Dockerfile</dockerFile>
                <tags>
                  <tag>${buildNumber}</tag>
                </tags>
              </build>
              <run>
                <dependsOn>
                  <container>kafka</container>
                </dependsOn>
                <network>
                  <mode>custom</mode>
                  <name>mad-net</name>
                  <alias>mad</alias>
                </network>
                <ports>
                  <port>+mad.ip:${debugJavaPort}:${debugJavaPort}</port>
                  <port>+mad.ip:7090:7090</port>
                  <port>+mad.ip:8125:8125/udp</port>
                </ports>
                <env>
                  <JAVA_OPTS>${debugJavaOptions}</JAVA_OPTS>
                  <KAFKA_SOURCE_BOOTSTRAP_HOST>kafka</KAFKA_SOURCE_BOOTSTRAP_HOST>
                  <!-- TODO(ville): Obtain these from the current user! -->
                  <!-- Ref: https://github.com/rynr/user-id-maven-plugin -->
                  <MAD_UID>1000</MAD_UID>
                  <MAD_GID>1000</MAD_GID>
                </env>
                <volumes>
                  <bind>
                    <volume>${project.basedir}/logs/docker:/opt/mad/logs</volume>
                  </bind>
                </volumes>
                <wait>
                  <http>
                    <url>http://${mad.ip}:7090/ping</url>
                    <method>GET</method>
                    <status>200</status>
                  </http>
                  <!-- NOTE: The service is _really_ slow to start-up under native docker -->
                  <time>150000</time>
                  <kill>1000</kill>
                </wait>
              </run>
            </image>
          </images>
          <skip>${skipDockerBuild}</skip>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>properties-maven-plugin</artifactId>
        <version>${maven.properties.plugin.version}</version>
        <executions>
          <execution>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>write-project-properties</goal>
            </goals>
            <configuration>
              <outputFile>
                ${project.build.directory}/pre-integration-test.properties
              </outputFile>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <!-- Logging -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${logback.version}</version>
    </dependency>
    <dependency>
      <groupId>com.arpnetworking.logback</groupId>
      <artifactId>logback-steno</artifactId>
      <version>${logback.steno.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>log4j-over-slf4j</artifactId>
      <version>${log4j.over.slf4j.version}</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>com.typesafe.akka</groupId>
      <artifactId>akka-slf4j_${scala.version}</artifactId>
      <version>${akka.version}</version>
      <scope>runtime</scope>
    </dependency>
    <!-- Metrics -->
    <dependency>
      <groupId>com.arpnetworking.metrics</groupId>
      <artifactId>metrics-client</artifactId>
      <version>${metrics.client.version}</version>
      <exclusions>
        <!-- TODO(ville): Remove suppression once findbugs to spotbugs migration is complete -->
        <exclusion>
          <groupId>com.google.code.findbugs</groupId>
          <artifactId>findbugs-annotations</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.arpnetworking.metrics.extras</groupId>
      <artifactId>apache-http-sink-extra</artifactId>
      <version>${metrics.client.http.version}</version>
      <exclusions>
        <!-- TODO(ville): Remove suppression once findbugs to spotbugs migration is complete -->
        <exclusion>
          <groupId>com.google.code.findbugs</groupId>
          <artifactId>findbugs-annotations</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.arpnetworking.metrics.extras</groupId>
      <artifactId>incubator-extra</artifactId>
      <version>${metrics.client.incubator.version}</version>
      <exclusions>
        <!-- TODO(ville): Remove suppression once findbugs to spotbugs migration is complete -->
        <exclusion>
          <groupId>com.google.code.findbugs</groupId>
          <artifactId>findbugs-annotations</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.arpnetworking.metrics.extras</groupId>
      <artifactId>jvm-extra</artifactId>
      <version>${metrics.jvm.extra.version}</version>
      <exclusions>
        <!-- TODO(ville): Remove suppression once findbugs to spotbugs migration is complete -->
        <exclusion>
          <groupId>com.google.code.findbugs</groupId>
          <artifactId>findbugs-annotations</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <!-- Google -->
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>${guava.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.inject</groupId>
      <artifactId>guice</artifactId>
      <version>${guice.version}</version>
      <exclusions>
        <!-- TODO(ville): Guava is released for android and jre; guice depends on the former only -->
        <exclusion>
          <groupId>com.google.guava</groupId>
          <artifactId>guava</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.google.protobuf</groupId>
      <artifactId>protobuf-java</artifactId>
      <version>${protobuf.version}</version>
    </dependency>
    <!-- Jackson -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson.version}</version>
      <exclusions>
        <!-- TODO(ville): Remove this exclusion once the annotations package is consistently depended upon:
            https://github.com/FasterXML/jackson-bom/issues/15
        -->
        <exclusion>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-annotations</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-guava</artifactId>
      <version>${jackson.version}</version>
      <scope>runtime</scope>
      <exclusions>
        <!-- TODO(ville): Jackson has a very slow update policy towards Guava; see:
            https://github.com/FasterXML/jackson-datatypes-collections/issues/23
            https://github.com/FasterXML/jackson-datatypes-collections/issues/24
            https://groups.google.com/forum/#!searchin/jackson-user/guava%7Csort:date/jackson-user/6AeY4UJMckE/_16cbhejAgAJ
        -->
        <exclusion>
          <groupId>com.google.guava</groupId>
          <artifactId>guava</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.module</groupId>
      <artifactId>jackson-module-guice</artifactId>
      <version>${jackson.version}</version>
      <exclusions>
        <!-- TODO(ville): Remove this exclusion once the annotations package is consistently depended upon:
            https://github.com/FasterXML/jackson-bom/issues/15
        -->
        <exclusion>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-annotations</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jdk8</artifactId>
      <version>${jackson.version}</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jsr310</artifactId>
      <version>${jackson.version}</version>
      <scope>runtime</scope>
      <exclusions>
        <!-- TODO(ville): Remove this exclusion once the annotations package is consistently depended upon:
            https://github.com/FasterXML/jackson-bom/issues/15
        -->
        <exclusion>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-annotations</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.module</groupId>
      <artifactId>jackson-module-afterburner</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <!-- Akka -->
    <dependency>
      <groupId>com.typesafe.akka</groupId>
      <artifactId>akka-actor_${scala.version}</artifactId>
      <version>${akka.version}</version>
    </dependency>
    <dependency>
      <groupId>com.typesafe.akka</groupId>
      <artifactId>akka-http-core_${scala.version}</artifactId>
      <version>${akka.http.version}</version>
    </dependency>
    <dependency>
      <groupId>com.typesafe.akka</groupId>
      <artifactId>akka-stream_${scala.version}</artifactId>
      <version>${akka.version}</version>
    </dependency>
    <dependency>
      <groupId>com.typesafe</groupId>
      <artifactId>config</artifactId>
      <version>${typesafe.config.version}</version>
    </dependency>
    <!-- General -->
    <dependency>
      <groupId>com.arpnetworking.commons</groupId>
      <artifactId>commons</artifactId>
      <version>${arpnetworking.commons.version}</version>
      <exclusions>
        <!-- TODO(ville): Remove suppression once findbugs to spotbugs migration is complete -->
        <exclusion>
          <groupId>com.google.code.findbugs</groupId>
          <artifactId>findbugs-annotations</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>net.sf.oval</groupId>
      <artifactId>oval</artifactId>
      <version>${oval.version}</version>
    </dependency>
    <dependency>
      <groupId>org.javassist</groupId>
      <artifactId>javassist</artifactId>
      <version>${javassist.version}</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>com.arpnetworking.commons</groupId>
      <artifactId>javassist-maven-core</artifactId>
      <version>${javassist.maven.core.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>jsr305</artifactId>
      <version>${jsr305.version}</version>
    </dependency>
    <dependency>
      <groupId>com.github.spotbugs</groupId>
      <artifactId>spotbugs-annotations</artifactId>
      <version>${spotbugs.annotations.version}</version>
    </dependency>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <version>${scala.library.version}</version>
    </dependency>
    <dependency>
      <groupId>org.scala-lang.modules</groupId>
      <artifactId>scala-java8-compat_${scala.version}</artifactId>
      <version>${scala.java8.compat.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>${apache.httpclient.version}</version>
    </dependency>
    <dependency>
      <groupId>org.asynchttpclient</groupId>
      <artifactId>async-http-client</artifactId>
      <version>${asynchttpclient.version}</version>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-core</artifactId>
      <version>${vertx.core.version}</version>
      <exclusions>
        <!-- TODO(ville): Old version of Vertx conflicts.
            We need to either remove Vert.x or upgrade; see master-2.0 for both
        -->
        <exclusion>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-core</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-databind</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpcore</artifactId>
      <version>${apache.httpcore.version}</version>
    </dependency>
    <dependency>
      <groupId>it.unimi.dsi</groupId>
      <artifactId>fastutil</artifactId>
      <version>${fastutil.version}</version>
      <!-- Jackson support not yet available:
          https://github.com/FasterXML/jackson-datatypes-collections/issues/38
      -->
    </dependency>
    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjrt</artifactId>
      <version>${aspectjrt.version}</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>cglib</groupId>
      <artifactId>cglib</artifactId>
      <version>${cglib.version}</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.xerial.snappy</groupId>
      <artifactId>snappy-java</artifactId>
      <version>${snappy.version}</version>
    </dependency>
    <!-- Aggregator Protocol -->
    <dependency>
      <groupId>com.arpnetworking.metrics</groupId>
      <artifactId>metrics-aggregator-protocol</artifactId>
      <version>${metrics.aggregator.protocol.version}</version>
    </dependency>
    <dependency>
      <groupId>io.inscopemetrics.client</groupId>
      <artifactId>protocol</artifactId>
      <version>${client.protocol.version}</version>
    </dependency>
    <dependency>
      <groupId>com.arpnetworking.metrics</groupId>
      <artifactId>prometheus-remote-protocol</artifactId>
      <version>${metrics.aggregator.protocol.prometheus.version}</version>
    </dependency>
    <!-- Test - General -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
      <exclusions>
        <!-- TODO(ville): Remove once JUnit depends on modern hamcrest; see:
            http://hamcrest.org/JavaHamcrest/distributables
        -->
        <exclusion>
          <groupId>org.hamcrest</groupId>
          <artifactId>hamcrest-core</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest</artifactId>
      <version>${hamcrest.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.github.tomakehurst</groupId>
      <artifactId>wiremock-standalone</artifactId>
      <version>${wiremock.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.typesafe.akka</groupId>
      <artifactId>akka-testkit_${scala.version}</artifactId>
      <version>${akka.version}</version>
      <scope>test</scope>
    </dependency>
    <!-- Test - Performance -->
    <dependency>
      <groupId>com.arpnetworking.metrics</groupId>
      <artifactId>generator</artifactId>
      <version>${metrics.generator.version}</version>
      <scope>test</scope>
      <exclusions>
        <!-- TODO(ville): Remove suppression once findbugs to spotbugs migration is complete -->
        <exclusion>
          <groupId>com.google.code.findbugs</groupId>
          <artifactId>findbugs-annotations</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.arpnetworking.test</groupId>
      <artifactId>performance-test</artifactId>
      <version>${performance.test.version}</version>
      <scope>test</scope>
      <exclusions>
        <!-- TODO(ville): Remove suppression once findbugs to spotbugs migration is complete -->
        <exclusion>
          <groupId>com.google.code.findbugs</groupId>
          <artifactId>findbugs-annotations</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.carrotsearch</groupId>
      <artifactId>junit-benchmarks</artifactId>
      <version>${junit.benchmarks.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-math3</artifactId>
      <version>${commons.math3.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.timgroup</groupId>
      <artifactId>java-statsd-client</artifactId>
      <version>${statsd.client.timgroup}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.kafka</groupId>
      <artifactId>kafka-clients</artifactId>
      <version>2.2.1</version>
    </dependency>
  </dependencies>

  <profiles>
    <profile>
      <id>performanceTest</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <executions>
              <execution>
                <id>default-test</id>
                <phase>test</phase>
                <goals>
                  <goal>test</goal>
                </goals>
                <configuration>
                  <includes>
                    <include>**/*PT.java</include>
                  </includes>
                  <systemPropertyVariables>
                    <logback.configurationFile>${basedir}/src/test/resources/logback-perf.xml</logback.configurationFile>
                  </systemPropertyVariables>
                  <parallel combine.self="override" />
                  <forkCount>1</forkCount>
                  <reuseForks>false</reuseForks>
                  <argLine>-agentlib:hprof=cpu=samples,depth=15,interval=5,force=y,file=${buildDirectory}/perf.profile.hprof.txt</argLine>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>rpm</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>rpm-maven-plugin</artifactId>
            <version>${rpm.maven.plugin.version}</version>
            <executions>
              <execution>
                <id>generate-rpm</id>
                <goals>
                  <goal>rpm</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <license>Apache 2 License</license>
              <group>System Environment/Daemons</group>
              <autoRequires>false</autoRequires>
              <preinstallScriptlet>
                <scriptFile>rpm/scripts/pre.sh</scriptFile>
              </preinstallScriptlet>
              <postinstallScriptlet>
                <scriptFile>rpm/scripts/post.sh</scriptFile>
              </postinstallScriptlet>
              <preremoveScriptlet>
                <scriptFile>rpm/scripts/preun.sh</scriptFile>
              </preremoveScriptlet>
              <postremoveScriptlet>
                <scriptFile>rpm/scripts/postun.sh</scriptFile>
              </postremoveScriptlet>
              <requires>
                <require>java &gt;= ${jdk.version}</require>
                <require>initscripts</require>
                <require>which</require>
              </requires>
              <mappings>
                <mapping>
                  <directory>/opt/mad</directory>
                  <sources>
                    <source>
                      <location>${buildDirectory}/appassembler</location>
                    </source>
                  </sources>
                </mapping>
                <mapping>
                  <directory>/opt/mad/config</directory>
                  <sources>
                    <source>
                      <location>config</location>
                    </source>
                  </sources>
                </mapping>
                <mapping>
                  <directory>/</directory>
                  <sources>
                    <source>
                      <location>rpm/fs</location>
                    </source>
                  </sources>
                </mapping>
                <!-- symlink the start script -->
                <mapping>
                  <directory>/usr/local/bin</directory>
                  <sources>
                    <softlinkSource>
                      <location>/opt/mad/bin/mad</location>
                    </softlinkSource>
                  </sources>
                </mapping>
              </mappings>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>debug</id>
      <activation>
        <activeByDefault>false</activeByDefault>
        <property>
          <name>debug</name>
          <value>true</value>
        </property>
      </activation>
      <properties>
        <debugJavaOptions>-Xdebug -Xrunjdwp:server=y,transport=dt_socket,address=${debugJavaPort},suspend=n</debugJavaOptions>
      </properties>
    </profile>
    <profile>
      <id>no-docker</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <skipIntegrationTests>true</skipIntegrationTests>
        <skipDockerBuild>true</skipDockerBuild>
      </properties>
    </profile>
  </profiles>
</project>
